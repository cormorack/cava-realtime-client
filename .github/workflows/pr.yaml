name: Kafka Client Service PR Build

on:
  pull_request:
    paths-ignore:
      - README.md
      - "resources/helm/**"
      - ".ci-helpers/**"

env:
  DOCKER_ORG: cormorack
  OPENJDK_IMAGE_VERSION: 8-jre-slim
  MAVEN_IMAGE_VERSION: 3.5-jdk-8-slim

jobs:
  # java-build:
#     runs-on: ubuntu-20.04
#     strategy:
#       matrix:
#         java: ['11.0.4']
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - uses: actions/cache@v1
#         with:
#           path: ~/.gradle/caches
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#           restore-keys: |
#             ${{ runner.os }}-gradle-
#       - name: Set up JDK
#         uses: actions/setup-java@v1
#         with:
#           java-version: ${{ matrix.java }}
#       - name: Build with Gradle
#         # run: ./gradlew check --parallel --continue
#         run: ./gradlew assemble
  docker-build:
    # needs: java-build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Job Environment Variables
        run: |
          DOCKER_TAG=PR
          IMAGE_SPEC="${DOCKER_ORG}/cava-realtime-client:${DOCKER_TAG}"
          echo "IMAGE_SPEC=${IMAGE_SPEC}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./resources/docker/Dockerfile
          push: false
          build-args: |
            MAVEN_IMAGE_VERSION=${{ env.MAVEN_IMAGE_VERSION }}
            OPENJDK_IMAGE_VERSION=${{ env.OPENJDK_IMAGE_VERSION }}
          tags: |
            ${{ env.IMAGE_SPEC }}
